/* tslint:disable */
/* eslint-disable */
/**
 * NestJS Auth
 * The NestJS Auth API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateGameDto,
} from '../models/index';
import {
    CreateGameDtoFromJSON,
    CreateGameDtoToJSON,
} from '../models/index';

export interface GamesControllerCreateRequest {
    createGameDto: CreateGameDto;
}

export interface GamesControllerFindOneRequest {
    id: string;
}

export interface GamesControllerRemoveRequest {
    id: string;
}

/**
 * 
 */
export class GamesApi extends runtime.BaseAPI {

    /**
     * Create a new game
     */
    async gamesControllerCreateRaw(requestParameters: GamesControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['createGameDto'] == null) {
            throw new runtime.RequiredError(
                'createGameDto',
                'Required parameter "createGameDto" was null or undefined when calling gamesControllerCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/games`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateGameDtoToJSON(requestParameters['createGameDto']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create a new game
     */
    async gamesControllerCreate(requestParameters: GamesControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gamesControllerCreateRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieve all games
     */
    async gamesControllerFindAllRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/games`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Retrieve all games
     */
    async gamesControllerFindAll(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gamesControllerFindAllRaw(initOverrides);
    }

    /**
     * Retrieve a game by ID
     */
    async gamesControllerFindOneRaw(requestParameters: GamesControllerFindOneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling gamesControllerFindOne().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/games/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Retrieve a game by ID
     */
    async gamesControllerFindOne(requestParameters: GamesControllerFindOneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gamesControllerFindOneRaw(requestParameters, initOverrides);
    }

    /**
     * Delete a game by ID
     */
    async gamesControllerRemoveRaw(requestParameters: GamesControllerRemoveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling gamesControllerRemove().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/games/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete a game by ID
     */
    async gamesControllerRemove(requestParameters: GamesControllerRemoveRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gamesControllerRemoveRaw(requestParameters, initOverrides);
    }

}
