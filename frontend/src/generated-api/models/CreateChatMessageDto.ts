/* tslint:disable */
/* eslint-disable */
/**
 * NestJS Auth
 * The NestJS Auth API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateChatMessageDto
 */
export interface CreateChatMessageDto {
    /**
     * content
     * @type {string}
     * @memberof CreateChatMessageDto
     */
    content: string;
    /**
     * sent_time
     * @type {Date}
     * @memberof CreateChatMessageDto
     */
    sentTime: Date;
    /**
     * user_id
     * @type {number}
     * @memberof CreateChatMessageDto
     */
    userId: number;
    /**
     * chat_room_id
     * @type {number}
     * @memberof CreateChatMessageDto
     */
    chatRoomId: number;
}

/**
 * Check if a given object implements the CreateChatMessageDto interface.
 */
export function instanceOfCreateChatMessageDto(value: object): value is CreateChatMessageDto {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('sentTime' in value) || value['sentTime'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('chatRoomId' in value) || value['chatRoomId'] === undefined) return false;
    return true;
}

export function CreateChatMessageDtoFromJSON(json: any): CreateChatMessageDto {
    return CreateChatMessageDtoFromJSONTyped(json, false);
}

export function CreateChatMessageDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateChatMessageDto {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'],
        'sentTime': (new Date(json['sent_time'])),
        'userId': json['user_id'],
        'chatRoomId': json['chat_room_id'],
    };
}

export function CreateChatMessageDtoToJSON(json: any): CreateChatMessageDto {
    return CreateChatMessageDtoToJSONTyped(json, false);
}

export function CreateChatMessageDtoToJSONTyped(value?: CreateChatMessageDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'sent_time': ((value['sentTime']).toISOString()),
        'user_id': value['userId'],
        'chat_room_id': value['chatRoomId'],
    };
}

