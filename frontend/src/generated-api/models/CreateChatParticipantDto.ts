/* tslint:disable */
/* eslint-disable */
/**
 * NestJS Auth
 * The NestJS Auth API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateChatParticipantDto
 */
export interface CreateChatParticipantDto {
    /**
     * Chat participant role
     * @type {string}
     * @memberof CreateChatParticipantDto
     */
    chatParticipantRole: string;
    /**
     * Is banned
     * @type {boolean}
     * @memberof CreateChatParticipantDto
     */
    isBanned: boolean;
    /**
     * Is muted
     * @type {boolean}
     * @memberof CreateChatParticipantDto
     */
    isMuted: boolean;
    /**
     * Entrance time
     * @type {Date}
     * @memberof CreateChatParticipantDto
     */
    entranceTime: Date;
    /**
     * User ID
     * @type {number}
     * @memberof CreateChatParticipantDto
     */
    userId: number;
    /**
     * Chat room ID
     * @type {number}
     * @memberof CreateChatParticipantDto
     */
    chatRoomId: number;
}

/**
 * Check if a given object implements the CreateChatParticipantDto interface.
 */
export function instanceOfCreateChatParticipantDto(value: object): value is CreateChatParticipantDto {
    if (!('chatParticipantRole' in value) || value['chatParticipantRole'] === undefined) return false;
    if (!('isBanned' in value) || value['isBanned'] === undefined) return false;
    if (!('isMuted' in value) || value['isMuted'] === undefined) return false;
    if (!('entranceTime' in value) || value['entranceTime'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('chatRoomId' in value) || value['chatRoomId'] === undefined) return false;
    return true;
}

export function CreateChatParticipantDtoFromJSON(json: any): CreateChatParticipantDto {
    return CreateChatParticipantDtoFromJSONTyped(json, false);
}

export function CreateChatParticipantDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateChatParticipantDto {
    if (json == null) {
        return json;
    }
    return {
        
        'chatParticipantRole': json['chat_participant_role'],
        'isBanned': json['is_banned'],
        'isMuted': json['is_muted'],
        'entranceTime': (new Date(json['entrance_time'])),
        'userId': json['user_id'],
        'chatRoomId': json['chat_room_id'],
    };
}

export function CreateChatParticipantDtoToJSON(json: any): CreateChatParticipantDto {
    return CreateChatParticipantDtoToJSONTyped(json, false);
}

export function CreateChatParticipantDtoToJSONTyped(value?: CreateChatParticipantDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chat_participant_role': value['chatParticipantRole'],
        'is_banned': value['isBanned'],
        'is_muted': value['isMuted'],
        'entrance_time': ((value['entranceTime']).toISOString()),
        'user_id': value['userId'],
        'chat_room_id': value['chatRoomId'],
    };
}

